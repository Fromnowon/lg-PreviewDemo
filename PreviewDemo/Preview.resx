<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>11, 19</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQMAAFEAAAB5GwIInFUGHK53
        NTC0eytHtHsrR654NTCfVwQcfyABCGUAAABzDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs14AAH8qAAeydykzyqJreNe7
        lLbhzLDX6NfC5+nYv/Tp2L/059fB5+LNr9fZvJO2y6RueLF3LDOGLAAHpVwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk0MAAIMlAASxezg8zqyBqObU
        uezo18D/28Gd/86odP/Ckk7/votD/76MQ//Aj0r/zKVu/9zBmv/n1b7/5dK37M2sha2uej9EdR0ABZFF
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALF3IAChWwoWyKBuiOXS
        uezn1Lv/yqBm/7BzHP+oZAX/qmgL/61uFP+xdR7/rGwS/61tE/+qaAv/qGQE/69xGf/El1f/4cut/+XS
        u+/KpHKMpF4IFrN5HgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgQAADdu2UApWssJNW3
        jrPr3Mj+zqdy/65uFP+pZwn/sHMd/7mEO//Hm13/xZpg/9a2iv+7hz3/wZFN/8KVWf+6hTr/sXUg/6hk
        Bf+saw7/yqFo/+jXwP7XupK2qGshK9KxYgCDIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs4NIAKZs
        LCPYvZzB6tnC/72JQP+nYgH/tHkm/7uHPv/Gm13/wJBO/7+MRf+4gTL/tHon/61uFP+1eyj/wI9L/8uj
        bP/HnGD/t4I5/7F2I/+nYgD/uYM3/+TSuf/Vto7Np2skK7R/OAAAAAAAAAAAAAAAAAAAAAAAAAAAAKVo
        HgCXUAAV1baNserZwv+5gjT/p2IA/7eAMv/JoWn/vo1L/7N3Iv+qaAn/p2MC/6ZhAP+mYQD/p2EA/6dh
        AP+oZAP/rGwS/7N4Jf/Bk1T/yJ9n/65vFv+nYgH/sXYl/+PQt//Vt5C1oFcAFq1tFgAAAAAAAAAAAAAA
        AACYUgAAOwAAA8WcZobq2sb+vYlB/6djAv+tbhP/uYU+/7qIRf+sbBH/p2IB/6hkA/+vcBb/t38u/7qE
        N/+6hDf/tn0u/65wGP+oZAT/p2IB/61tE/+5hDn/t4Ay/7qEOP+nYgD/uYM2/+jWvv/Jom+IQwAAA51V
        BgAAAAAAAAAAALyKRAC1fDI75dK3682nc/+nYwH/sHQe/8OWW/+sbRb/qWYH/6diAP+xdR//w5ZW/8mf
        Zf/InWD/xppa/8aaWv/Gml3/xpxj/8OWWf+ydyT/qGMC/6hjAv+5hkT/zql5/7F2Iv+mYQD/yZ9k/+PP
        tOu2fTI7vYpCAAAAAACjXAAAYwAABNOwgZ/n1Lj/rm4U/6xrD//AkE3/xJZX/6ppC/+oZAP/vIg+/8mg
        Zv+zeSj/rm8V/86ocf/UsoP/1LKC/9Kwfv+1eyj/r3Ic/8OVVf+8iD3/qGQC/6tqDv/BkU7/s3gm/6ln
        C/+rag3/4cmn/9KwgqFkAAAFoVwGAK51LwCqcCky49C46suiZ/+nYgD/vYtI/82ncv+ydiL/p2IA/7yI
        Pv/GmVv/q2oN/6diAP+pZgb/xZdW/9Gsef/QrHj/yqFm/6xrDv+nYwD/qWYH/7uGO/+6hDr/qGMC/7N4
        I//KoWn/tH0z/6ZhAP/DlVL/5M+z67N3JjS0eysA4cyvAMifZ27o17//snYh/6hjAv++jEf/xJdX/6hl
        BP+xdB7/yJ9l/6tpDf+nYwH/qGQD/6djAf+8iD3/0Kt3/9Gtev/Ck0//qWUF/6hkAv+oYwL/qGUF/8CQ
        Tf+0eCT/qWUE/8OUUv/Dllj/qmgK/65vFf/jzrD/x55lde7ewwBCAAAF1LWLq93DoP+oZAT/rnEb/7qF
        Ov+saxD/qGMC/8eaXP+4gTP/qWYG/6poCv+qaAr/qmcI/7R6Jv/TsYD/17iL/7qEOP+qaAn/qmgK/6po
        Cv+pZgf/sXMc/8SWVP+oZQT/sHMc/8OVVP+xcx3/p2IA/9e5jf/XupGtVgAABZZJABXfx6fN0Kt3/6Zg
        AP+2fzH/wpNS/6tpDf+tbhP/4Mmq/9i6jv/Wton/38ai/97FoP/hyaf/5dG0/+HKqf/kzq//486v/+PN
        rf/hyaf/4Mek/9OxgP/MpGv/4Mip/7ByGv+qaAr/yJ5k/7iAMf+mYAD/x5xe/9/HptKbUQAYqGcPIuLN
        st/DlFT/p2IA/7Z/Mf+7hz//qGQD/7R7Lf/dybf/38aj/+HJp//r28X/6trC/+/iz//y59n/3sWh/97E
        n//t38v/8uja/+/i0P/s3sn/3cKb/9Kvff/n2Mf/uYM5/6hkA/+9jEf/uYQ5/6dhAP+/jEX/5NG337B1
        JyPAkE4i7eDP376MRP+nYgD/u4U5/7qEN/+oZAT/uYM1/9vBof/dwpz/2r6V/+TQsv/hyqj/5dCy//Lo
        2v/l0LP/5dCz/+/j0v/p2L//5M+w/+XRtP/bwJj/1raI/+HMsv+/jkr/p2IA/76NRv/JnmL/qWYG/76M
        RP/w5NPs2r6YOb6NSyLs383fvoxE/6dhAP+zdyL/uYM1/6hkBP+5gzX/0K1+//fy6//59O3/+PPr//jy
        6v/w5NT/6NfA//Dk0v/y6Nr/4s2u/+zdyP/38ef/+PPr//jz6//7+fX/2LuT/76MRf+nYgD/qmgK/7Z9
        LP+pZgb/voxE/+/j0+zavpc5pmQJIuHLrt/Ck1H/p2IA/6djAf+nYgH/p2IA/7eAMf/EmFr/59W8////
        //////////////37+P/q2sL/8OXU//Tr4P/48ur//fz7//////////////////Lo3P/DlVb/t38w/6di
        AP+oZAL/qGQD/6diAP+/jEX/48+z365yHyOTRgAU38eoy86pdf+nYQD/qGQD/6hjAv+nYgD/r3AW/8ic
        X//Gml3//fz7///////////////+/9q+lf/gyKb/2r+Z/+7hz//28er///7+////////////0rGD/76M
        Rv+xdB7/p2MC/6lnB/+oZAP/p2EA/8aaW//cw6LPl04AFxoAAAPVtYuk2r+a/6hkBP+oZQT/s3gm/7iB
        M/+raQz/wpVW/8aaX//59O3/////////////////3MGc/97Dnv/Mo2v/1rWH//fx6f////////////79
        /P/MpW//vIpJ/7BzHP+7hj3/wZJS/7ByGv+nYgD/1LOG/9S0jKtBAAAF17uUAMOXW2nk0LX/sHMb/7J1
        IP/Vt5H/1baL/7F0Hf+xdB//zKZv/+PNrv/////////////////69vD/8ebW/9/Go//Sr37/9u/l////
        ////////7N3I/8qhaP+zeSf/r3EZ/8GRTv/Hn2v/t4Az/6xrEP/fyKr/yKFsa9/JrwCwcx8ArG0WKOLM
        reLInmL/r3Ea/8acYv+6hT7/rm8V/6diAP+8iT//zqhx/97FoP/27+b//v38///////7+fX/+fTt//37
        +P/+/f3/+PTu/+TPsv/Np3H/vIlC/6hkA/+pZQX/tXwr/7qIRv+rag7/v49N/93GqeaqbyUsrXMpAJ9a
        AwA0AAADzKl7nN/Jrf+sbBP/q2oN/6llBf+oYwL/qGQF/6lmB/+8iUD/yJ1j/8CPSv/UtIr/9/Lp///+
        /v//////+vfy/9/Gpv/AkU7/xJdW/7yJQv+pZwn/p2MB/6hjAv+pZgf/qGQF/6poC//bwaH/z61+nlUA
        AAScWgwAAAAAALF7NwCqcCg14Mqr5c2mcP+nYgH/qGQD/6lmBv+0fC//tn8y/6lmBv+ydyX/x5td/8ec
        YP/Np3L/17mP/9e4jv/QrHr/xJha/8GSUP+0eif/rW4U/76MRv/Aj0n/rW0S/6hjAv+nYgD/xZhZ/9/H
        qOexdyo4t4E6AAAAAAAAAAAAnVIAAAAAAADFmVx459W9+7uGPf+mYQD/tnwq/8ujbf/ClVr/uIE0/6di
        AP+qZwj/sHMc/7Z+MP+8ikT/vYtE/7iBM/+xdB//qmcI/6diAP+ubxX/xpth/9Csev+zdyL/pmEA/7V9
        L//izbH8xZtkeAAAAACdTgAAAAAAAAAAAAAAAAAApGQZAJVKAA7PrH6n5dK3/7mCNf+rag7/wJFQ/7qE
        OP+sbBD/p2MB/7uGPP+5gzb/tn4v/6hkBP+oZAP/sXUg/8GRTf+6hDj/p2IA/65vFf/Aj0r/uIQ8/6hl
        Bf+ydR//3MSk/8+sgKqgVgAQrG4jAAAAAAAAAAAAAAAAAAAAAAAAAAAAsngiAKNdCRvPr4ey5dG2/7uG
        O/+raQz/rm4U/6hjAv+oZAL/vYtF/8SZX//Kom7/qWYI/6tqDf/Bk1T/1LWK/8qia/+oZAT/qGQD/6hl
        BP+mYQD/tn4w/93Eo//ZvZiypGIVG7F7LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsXciAKNe
        CxvPrH6k5NG5+8qhaP+saw//p2EA/6djA/+0eiv/wpRW/7aAN/+nYwL/qGQC/8OWWP/SsYX/xppe/6lm
        Bv+nYgD/q2oN/8WYWv/izbH7z6x+qaZjEhy0fSsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAArmsaAJVPAQ3DmF934cus4t/GpP/Fl1b/r3EY/6pnCf+ubxb/qmgL/6diAP+mYQD/rGwR/69x
        Gv+pZgf/rm8V/8KTUf/exaT/38en5caaXHicUwEPtXkcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfyoAAFoAAAKucioryaR4keHKq+LizK391reL/8ieYv+/jUb/v41F/7+N
        Rf++jET/xppd/9e3iv/gyan938in48ike5utdjozbAAAAooxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIEqAABdCgADq20gJ8abXmPTtImf3MOhxt/G
        pN3j0Ljf49C5397GpN7cwqDH07OJocidYGStbh8nbg8ABIUqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcxIAAFsB
        AAOOQRUPo14FIaxxJiKtcicio18HIpRLHBBnBgAEdhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+AH//+AAf/+AAB//AAAP/gAAB/wAAAP4AAAB8AAAAPAAAADgAAAAYAA
        AAGAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAHAAAADwAAAA+AA
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///wD/8=
</value>
  </data>
</root>